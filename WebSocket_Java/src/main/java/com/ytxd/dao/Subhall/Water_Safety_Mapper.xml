<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ytxd.dao.Subhall.Water_Safety_Mapper">
	<!--获取该调度方案的工情信息-->
	<select id="Select_Storm_Gate_List_old" resultType="java.util.Map">
		select
			stcd,stnm,lgtd,lttd,
			storm_gate_r.tm,
			case when st_stbprp_b.stcd = 'MHZM03' and storm_gate_r.q is null then '-' else FORMAT(ifnull(storm_gate_r.q,0),1) end q,
			st_stbprp_b.total_gate
		from
		    st_stbprp_b
			left join (select tm,q from storm_gate_r where plan_id = #{plan_id} limit 1) storm_gate_r on 1=1
		where sttp = '07' and flag ='01'
	</select>
	<!--获取该调度方案的工情信息-->
	<select id="Select_Storm_Gate_List" resultType="java.util.Map">
		select
			st_stbprp_b.stcd,stnm,lgtd,lttd,null tm,
			case when st_stbprp_b.stcd = 'MHZM03' and storm_node_r.q 	is null then '-' else FORMAT(ifnull(storm_node_r.q,0),1) end q,
			st_stbprp_b.total_gate
		from
			st_stbprp_b
			left join (
				select
				    storm_node_r.q,storm_node_contrast.stcd
				from
				    storm_node_contrast
				    LEFT JOIN storm_node_r on storm_node_contrast.NODEID = storm_node_r.nodeid
				where
				    type = '1'
					and plan_id = #{plan_id} and round(storm_node_r.timestep/60/60,0) = #{step}
			) storm_node_r on storm_node_r.stcd = st_stbprp_b.stcd
		where
			sttp = '07' and flag = '01'
	</select>
	<!--获取该调度为空的工情信息-->
	<select id="Select_Storm_Gate_List_NullPlan" resultType="java.util.Map">
		select
		    stcd,stnm,lgtd,lttd,
		    null tm,
			case when stcd = 'MHZM03' then '-' else FORMAT(0,1) end q,
		    total_gate
		from
		    st_stbprp_b
		where sttp = '07' and flag ='01'
	</select>
<!--	根据调度方案和站点获取水情信息-->
	<select id="Select_Storm_Water_Level_List" resultType="java.util.Map">
		select st_stbprp_b.*,timehours.tm,ifnull(st_river_r_view.z,(select diff_z.z from dual where timehours.future = '01')) z ,round(st_pptn_r.p,2) p,future,
			   ifnull(st_river_r_view.eigen,'00') eigen,eigenJOin.description eigenname
		from (
			select ADDDATE(str_to_date(#{tm}, '%Y-%m-%d %H'), interval -num hour) tm,'00' future
				 from timehours
				 where num &lt;= TIMESTAMPDIFF(hour,#{tm}, ADDDATE(#{tm}, interval 3 day)) and num > 0
				 union
				 select ADDDATE(str_to_date(#{tm}, '%Y-%m-%d %H'), interval num hour) tm,'01' future
				 from timehours
				 where num &lt;= TIMESTAMPDIFF(hour,#{tm}, ADDDATE(#{tm}, interval 3 day))
		) timehours
		left join (select stcd,stnm,lgtd,lttd from st_stbprp_b where stcd =#{stcd}) st_stbprp_b on 1=1
		left join (
		select st_river_r_view.tm,z,fun_wl_eigenvalue(stcd,z) eigen from (select stcd,DATE_FORMAT(tm,'%Y-%m-%d %H:00:00') tm,z,row_number() over(partition by stcd,DATE_FORMAT( tm, '%Y-%m-%d %H:00:00' ) order by tm) rn
			from st_river_r_view where tm &lt; ADDDATE(#{tm},interval 0 hour) and tm >= ADDDATE(#{tm},interval -3 day) and stcd =#{stcd}
			) st_river_r_view where rn =1
			union all
			select tm,z,fun_wl_eigenvalue(stcd,z) eigen from (
			select stcd,DATE_FORMAT(adddate(storm_node_r.tm,interval timestampdiff(hour,diff_storm_node_r.tm,#{tm}) hour ),'%Y-%m-%d %H:00:00') tm,
			(storm_node_r.z + (diff_st_river_r_view.z-diff_storm_node_r.z)) z ,
			row_number() over(partition by storm_node_r.nodeid,DATE_FORMAT(adddate(storm_node_r.tm,interval timestampdiff(hour,diff_storm_node_r.tm,#{tm}) hour ),'%Y-%m-%d %H:00:00') order by storm_node_r.tm desc) rn
			from storm_node_r
			left join (select plan_id,nodeid,tm,z from (
			    select  plan_id,nodeid,tm,z,row_number() over(partition by  plan_id,nodeid order by tm desc ) rn from storm_node_r
			     where tm &lt; (select adddate(date_format(min(tm),'%Y-%m-%d %H:00:00'),interval 1 hour) from storm_node_r
					left join (select nodeid,stcd from storm_node_contrast where type ='1') storm_node_contrast on storm_node_contrast.nodeid = storm_node_r.nodeid
			     where plan_id = #{plan_id} and stcd = #{stcd} )
			    )
			    diff_storm_node_r where rn ='1'
			) diff_storm_node_r on diff_storm_node_r.plan_id = storm_node_r.plan_id and diff_storm_node_r.nodeid = storm_node_r.nodeid
			left join (select z from (select stcd,z,row_number() over(partition by stcd order by tm desc ) rn  from st_river_r_view )
			    diff_st_river_r_view where rn =1 and stcd = #{stcd}
			) diff_st_river_r_view on 1=1
			left join (select nodeid,stcd from storm_node_contrast where type ='1') storm_node_contrast on storm_node_contrast.nodeid = storm_node_r.nodeid
			where  storm_node_r.plan_id = #{plan_id}
			and storm_node_contrast.stcd = #{stcd}
			) storm_node_r where rn =1
		)st_river_r_view on st_river_r_view.tm = timehours.tm
		left join (select code,description from sm_codeitem where codeid = 'AJ'
		) eigenJOin on eigenJOin.code = st_river_r_view.eigen
		left join (
			select stcd,DATE_FORMAT(tm,'%Y-%m-%d %H:00:00') tm,round(sum(p),2) p from st_pptn_r
			where tm &lt; ADDDATE(#{tm},interval 0 hour) and tm >= ADDDATE(#{tm},interval -3 day)
		    and stcd = (select target_stcd from st_site_relation where soure_stcd  = #{stcd} limit 1)
			group by stcd,DATE_FORMAT(tm,'%Y-%m-%d %H:00:00')
			union all
			select stcd,DATE_FORMAT(time,'%Y-%m-%d %H:00:00') tm,round(sum(pre),2) p from st_weather_r
			where time &lt;= ADDDATE(#{tm},interval 3 day) and time >= ADDDATE(#{tm},interval 0 hour)
		    and  stcd = (select weather_stcd from st_weather_relation where stbprp_stcd = #{stcd} limit 1)
			group by stcd,DATE_FORMAT(time,'%Y-%m-%d %H:00:00')
		) st_pptn_r on st_pptn_r.tm = timehours.tm
		left join (select z from st_river_r_view where stcd =#{stcd} order by tm desc limit 1) diff_z on 1=1
		order by timehours.tm asc
	</select>

	<select id="Select_PredictionWL_List" resultType="java.util.HashMap">
		select st_stbprp_b.stcd,storm_plan.plan_id,<include refid="com.ytxd.dao.Water_Common.Water_Common_Mapper.Water_Common_Select"/>
		,st_river_r_view.z z,round(ifnull(storm_node_r_24.pre_24_z,0) + (ifnull(st_river_r_view.z,0) - ifnull(storm_node_r_24.z,0)),2) pre_24_z ,storm_node_r_24.pre_24_tm,
		round(ifnull(storm_node_r_3.pre_3d_z,0) + (ifnull(st_river_r_view.z,0) - ifnull(storm_node_r_3.z,0)),2) pre_3d_z ,storm_node_r_3.pre_3d_tm,ifnull(st_river_r_view.eigen,'00') eigen,eigenJOin.description eigenname,
		st_stbprp_introduce.introduce, st_stbprp_introduce.filepath
		from st_stbprp_b
		left join (select stcd,introduce,filepath from st_stbprp_introduce) st_stbprp_introduce on st_stbprp_introduce.stcd = st_stbprp_b.stcd
		<include refid="com.ytxd.dao.Water_Common.Water_Common_Mapper.Water_Common_Join"/>
		left join (select stcd,z,tm,fun_wl_eigenvalue(stcd,z) eigen from (select *, row_number() over(partition by stcd order by tm desc) rn
				from st_river_r_view where   st_river_r_view.tm >= ADDDATE(#{tm}, INTERVAL -1 day )
			and st_river_r_view.tm &lt;= StR_TO_DATE(#{tm}, '%Y-%m-%d %H:%i:%s' )
		) st_river_r_view where rn = '1'
		) st_river_r_view on st_river_r_view.stcd = st_stbprp_b.stcd
		left join (select code,description from sm_codeitem where codeid = 'AJ'
		) eigenJOin on eigenJOin.code = st_river_r_view.eigen
		left join (
			select if((select count(*) from storm_node_r where storm_node_r.plan_id = storm_plan.plan_id)  > 0 ,plan_id,'4f76d44b8134b03a10718238c7e3b8d8') plan_id, plan_name, p, mh_wl, sth_wl,abs_mh_wl,abs_sth_wl,abs_p from (
			    	SELECT  plan_id, plan_name, p, mh_wl, sth_wl,
							abs(ifnull(mh_wl,0) - ifnull((SELECT z FROM st_river_r_view WHERE tm &lt;=StR_TO_DATE( #{tm}, '%Y-%m-%d %H:%i:%s' )
							            AND tm >= ADDDATE(#{tm}, INTERVAL - 1 DAY ) AND stcd = #{mh_stcd} ORDER BY tm DESC LIMIT 1 ),0)
							) abs_mh_wl,
							abs(ifnull(sth_wl,0) - ifnull((SELECT z FROM st_river_r_view WHERE tm &lt;= STR_TO_DATE(#{tm}, '%Y-%m-%d %H:%i:%s' )
							            AND tm >= ADDDATE(#{tm}, INTERVAL - 1 DAY ) AND stcd = #{sth_stcd} ORDER BY tm DESC LIMIT 1 ) ,0)
							) abs_sth_wl,
							abs(ifnull(p,0) - ifnull(
								IF(period LIKE '%d',
									(SELECT sum( pre ) FROM st_weather_r WHERE stcd = #{weather_stcd} AND time >= STR_TO_DATE( #{tm}, '%Y-%m-%d %H:%i:%s' )
										AND time &lt;= ADDDATE( #{tm}, INTERVAL REPLACE ( period, 'd', '' ) DAY )),
											(SELECT sum( pre ) FROM st_weather_r WHERE stcd = #{weather_stcd} AND time >= STR_TO_DATE( #{tm}, '%Y-%m-%d %H:%i:%s' )
												AND time &lt;= ADDDATE( #{tm}, INTERVAL REPLACE ( period, 'h', '' ) HOUR ))
									),0)
							) abs_p
					FROM storm_plan) storm_plan order by abs_p asc,abs_mh_wl asc,abs_sth_wl asc limit 1
		)storm_plan on 1=1
		left join (select nodeid,stcd from storm_node_contrast where type ='01') storm_node_contrast on storm_node_contrast.stcd = st_stbprp_b.stcd
		left join (select plan_id,nodeid,starttm,start_z z,pre_24_z,adddate(IFNULL(#{tm},SYSDATE()),INTERVAL IFNULL(pre_24_tm,0)/3600 hour) pre_24_tm from STORM_NODE_R_STATIC) storm_node_r_24 on storm_node_r_24.nodeid = storm_node_contrast.nodeid and storm_node_r_24.plan_id = storm_plan.plan_id
		left join (select plan_id,nodeid,starttm,start_z z,pre_3_z pre_3d_z,adddate(IFNULL(#{tm},SYSDATE()),INTERVAL IFNULL(pre_3_tm,0)/3600 hour) pre_3d_tm from STORM_NODE_R_STATIC ) storm_node_r_3 on storm_node_r_3.nodeid = storm_node_contrast.nodeid  and storm_node_r_3.plan_id = storm_plan.plan_id
		<where>
			<include refid="com.ytxd.dao.Water_Common.Water_Common_Mapper.Water_Common_Where"/>
		</where>
		order by -st_stbprp_b.orderid desc
	</select>
	
	<select id="Select_Warning_Release_List" resultType="java.util.HashMap">
		select st_stbprp_b.stcd,st_stbprp_b.stnm,st_stbprp_b.lgtd,st_stbprp_b.lttd,st_river_r_view.id,st_river_r_view.z z,
		       st_river_r_view.warning_level,st_river_r_view.release_time,warning_basis,filepath,already,st_stbprp_b.alertstage,
		       warning_level_join.description warning_levelname,storm_node_r_24.pre_24_z ,st_stbprp_b.sttp,
		       storm_node_r_24.pre_24_tm,storm_node_r_3.pre_3_z pre_3d_z , storm_node_r_3.pre_3_tm pre_3d_tm,storm_plan.plan_id
		from st_stbprp_b
		left join (select id,stcd,z,warning_level,release_time, warning_basis,filepath,'01' already  from  warning_release
				where release_time &lt;= adddate(#{tm},interval 0 hour)
		 		and release_time >= adddate(#{tm},interval -24 hour)
			union all
			select '' id,stcd,z,fun_wl_eigenvalue(stcd,z) warning_level,tm release_time, '' warning_basis,'' filepath,'00' already
			from (select *, row_number() over(partition by stcd order by tm desc) rn
				from st_river_r_view where tm &lt;= adddate(#{tm},interval 0 hour)
				and tm >= adddate(#{tm},interval -24 hour)
			) st_river_r_view where rn = '1' and not exists (select 1 from warning_release where release_time &lt;= adddate(#{tm},interval 0 hour)
				and release_time >= adddate(#{tm},interval -24 hour) and warning_release.stcd = st_river_r_view.stcd)
		) st_river_r_view on st_river_r_view.stcd = st_stbprp_b.stcd
		left join (select code,description from sm_codeitem where codeid = 'AJ'
		) warning_level_join on warning_level_join.code = st_river_r_view.warning_level
		left join ( select ifnull(#{plan_id},plan_id)plan_id, plan_name, p, mh_wl, sth_wl,abs_mh_wl,abs_sth_wl,abs_p from (
				SELECT plan_id, plan_name, p, mh_wl, sth_wl,
				abs(ifnull(mh_wl,0) - ifnull((SELECT z FROM st_river_r_view WHERE tm &lt;=StR_TO_DATE( #{tm}, '%Y-%m-%d %H:%i:%s' )
					AND tm >= ADDDATE(#{tm}, INTERVAL - 1 DAY ) AND stcd = #{mh_stcd} ORDER BY tm DESC LIMIT 1 ),0)
				) abs_mh_wl,
				abs(ifnull(sth_wl,0) - ifnull((SELECT z FROM st_river_r_view WHERE tm &lt;= STR_TO_DATE(#{tm}, '%Y-%m-%d %H:%i:%s' )
					AND tm >= ADDDATE(#{tm}, INTERVAL - 1 DAY ) AND stcd = #{sth_stcd} ORDER BY tm DESC LIMIT 1 ) ,0)
				) abs_sth_wl,
				abs(ifnull(p,0) - ifnull(
				    IF(period LIKE '%d',
				        (SELECT sum( pre ) FROM st_weather_r WHERE stcd = #{weather_stcd} AND time >= STR_TO_DATE( #{tm}, '%Y-%m-%d %H:%i:%s' )
							AND time &lt;= ADDDATE( #{tm}, INTERVAL REPLACE ( period, 'd', '' ) DAY )),
				        (SELECT sum( pre ) FROM st_weather_r WHERE stcd = #{weather_stcd} AND time >= STR_TO_DATE( #{tm}, '%Y-%m-%d %H:%i:%s' )
							AND time &lt;= ADDDATE( #{tm}, INTERVAL REPLACE ( period, 'h', '' ) HOUR ))
				    ),0)
				) abs_p
				FROM storm_plan ) storm_plan order by abs_p asc,abs_mh_wl asc,abs_sth_wl asc limit 1
		)storm_plan on 1=1
		left join (select nodeid,stcd from storm_node_contrast where type ='1') storm_node_contrast on storm_node_contrast.stcd = st_stbprp_b.stcd
		left join (select plan_id,nodeid,starttm,pre_24_z,adddate(IFNULL(#{tm},SYSDATE()),INTERVAL IFNULL(pre_24_tm,0)/3600 hour) pre_24_tm from STORM_NODE_R_STATIC) storm_node_r_24 on storm_node_r_24.nodeid = storm_node_contrast.nodeid and storm_node_r_24.plan_id = storm_plan.plan_id
		left join (select plan_id,nodeid,starttm,pre_3_z,adddate(IFNULL(#{tm},SYSDATE()),INTERVAL IFNULL(pre_3_tm,0)/3600 hour) pre_3_tm from STORM_NODE_R_STATIC ) storm_node_r_3 on storm_node_r_3.nodeid = storm_node_contrast.nodeid  and storm_node_r_3.plan_id = storm_plan.plan_id
		where sttp in ('01','08') and flag ='01'
		<if test="stcd != null and stcd != ''">
			and st_stbprp_b.stcd = #{stcd}
		</if>
		<if test="stnm != null and stnm != ''">
			and st_stbprp_b.stnm like concat('%',#{stnm},'%')
		</if>
		order by -st_stbprp_b.orderid desc
	</select>

	<sql id="Waring_Insert_Columns">
		<if test="z != null and z != '' ">
			,z
		</if>
		<if test="warning_level != null and warning_level != '' ">
			,warning_level
		</if>
		<if test="release_time != null and release_time != '' ">
			,release_time
		</if>
		<if test="filepath != null and filepath != '' ">
			,filepath
		</if>
		<if test="warning_basis != null and warning_basis != '' ">
			,warning_basis
		</if>
	</sql>
	<sql id="Waring_Insert_Params">
		<if test="z != null and z != '' ">
			,#{z}
		</if>
		<if test="warning_level != null and warning_level != '' ">
			,#{warning_level}
		</if>
		<if test="release_time != null and release_time != '' ">
			,#{release_time}
		</if>
		<if test="filepath != null and filepath != '' ">
			,#{filepath}
		</if>
		<if test="warning_basis != null and warning_basis != '' ">
			,#{warning_basis}
		</if>
	</sql>
	<insert id="Insert_Waring_Release">
		insert into warning_release(stcd<include refid="Waring_Insert_Columns"/>) values(#{stcd}<include refid="Waring_Insert_Params"/>)
	</insert>

	<select id="Select_Safety_Selected_List" resultType="java.util.Map">
		select code, description,codeid from (
		select distinct period code,period description ,'01' codeid from storm_plan where period is not null
		union all
		select distinct reproduce code,reproduce description ,'02' codeid from storm_plan where reproduce is not null
		union all
		select distinct p code,p description ,'03' codeid from storm_plan where p is not null
		union all
		select distinct mh_wl code,mh_wl description ,'04' codeid from storm_plan where mh_wl is not null
		union all
		select distinct sth_wl code,sth_wl description ,'05' codeid from storm_plan where sth_wl is not null
		) sm_codeitem
		<where>
			<if test="code != null and code != '' ">
				and code = #{code}
			</if>
			<if test="codeid != null and codeid != '' ">
				and codeid = #{codeid}
			</if>
		</where>
		order by REPLACE(REPLACE(code,'d','1000'),'h','')+0 asc
	</select>
	<select id="Select_Default_Plan_Info" resultType="java.util.Map">
		select plan_id, plan_name, period, p, reproduce, mh_wl, sth_wl, pre_drop, pre_desc,
		       st_desc, measures, remake, submittime, dispatch_desc, preventive_desc
		from storm_plan
		where plan_id =  (
			select plan_id from (
				SELECT plan_id, plan_name, p, mh_wl, sth_wl,
					abs(ifnull(mh_wl,0) - ifnull((SELECT z FROM st_river_r_view WHERE tm &lt;=StR_TO_DATE( #{tm}, '%Y-%m-%d %H:%i:%s' )
					AND tm >= ADDDATE(#{tm}, INTERVAL - 1 DAY ) AND stcd = #{mh_stcd} ORDER BY tm DESC LIMIT 1 ),0)
					) abs_mh_wl,
					abs(ifnull(sth_wl,0) - ifnull((SELECT z FROM st_river_r_view WHERE tm &lt;= STR_TO_DATE(#{tm}, '%Y-%m-%d %H:%i:%s' )
					AND tm >= ADDDATE(#{tm}, INTERVAL - 1 DAY ) AND stcd = #{sth_stcd} ORDER BY tm DESC LIMIT 1 ) ,0)
						) abs_sth_wl,
					   abs(ifnull(p,0) - ifnull(
							   IF(period LIKE '%d',
								  (SELECT sum( pre ) FROM st_weather_r WHERE stcd = #{weather_stcd} AND time >= STR_TO_DATE( #{tm}, '%Y-%m-%d %H:%i:%s' )
									  AND time &lt;= ADDDATE( #{tm}, INTERVAL REPLACE ( period, 'd', '' ) DAY )),
				        (SELECT sum( pre ) FROM st_weather_r WHERE stcd = #{weather_stcd} AND time >= STR_TO_DATE( #{tm}, '%Y-%m-%d %H:%i:%s' )
							AND time &lt;= ADDDATE( #{tm}, INTERVAL REPLACE ( period, 'h', '' ) HOUR ))
				    ),0)
						   ) abs_p
					FROM storm_plan
			) storm_plan order by abs_p asc,abs_mh_wl asc,abs_sth_wl asc limit 1
		)
	</select>

	<select id="Select_Near_Plan_Info" resultType="java.util.Map">
		select * from (
			SELECT
			    plan_id, plan_name, p, mh_wl, sth_wl,
				abs(ifnull(p,0) - nowinfo.nowp) abs_p,
				abs(ifnull(mh_wl,0) - nowinfo.nowmhwl) abs_mh_wl,
				abs(ifnull(sth_wl,0) - nowinfo.nowsthwl) abs_sth_wl,
				format(nowinfo.nowp,0) nowp,
				format(nowinfo.nowmhwl,1) nowmhwl,
				format(nowinfo.nowsthwl,2) nowsthwl
			FROM
			    storm_plan
				left join (
					select
						ifnull((SELECT sum( pre ) FROM st_weather_r WHERE stcd = #{weather_stcd} AND time >= STR_TO_DATE( #{tm}, '%Y-%m-%d %H:%i:%s' ) AND time &lt;= ADDDATE( #{tm}, INTERVAL REPLACE ( #{period}, 'd', '' ) DAY )),0) nowp,
						ifnull((SELECT z FROM st_river_r_view WHERE tm &lt;=StR_TO_DATE( #{tm}, '%Y-%m-%d %H:%i:%s' ) AND tm >= ADDDATE(#{tm}, INTERVAL - 1 DAY ) AND stcd = #{mh_stcd} ORDER BY tm DESC LIMIT 1 ),0) nowmhwl,
						ifnull((SELECT z FROM st_river_r_view WHERE tm &lt;= STR_TO_DATE(#{tm}, '%Y-%m-%d %H:%i:%s' ) AND tm >= ADDDATE(#{tm}, INTERVAL - 1 DAY ) AND stcd = #{sth_stcd} ORDER BY tm DESC LIMIT 1 ) ,0) nowsthwl
					from
						dual
				) nowinfo on 1=1
			where
			    period = #{period}
		) storm_plan order by abs_p asc,abs_mh_wl asc,abs_sth_wl asc limit 1
	</select>
</mapper>